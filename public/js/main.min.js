!(function () {
  "use strict";
  document.documentElement.classList.remove("no-js"),
    document.documentElement.classList.add("js"),
    window.addEventListener("load", function () {
      document.body.classList.add("is-loaded");
    });
})(),
  (function () {
    "use strict";
    const e = document.getElementById("header-nav-toggle"),
      t = document.getElementById("nav-menu");
    e &&
      (e.addEventListener("click", function () {
        document.body.classList.toggle("off-nav-is-active"),
          t.classList.toggle("is-active"),
          t.style.maxHeight
            ? (t.style.maxHeight = null)
            : (t.style.maxHeight = t.scrollHeight + "px"),
          "true" === this.getAttribute("aria-expanded")
            ? this.setAttribute("aria-expanded", "false")
            : this.setAttribute("aria-expanded", "true");
      }),
      document.addEventListener("click", function (n) {
        n.target === t ||
          n.target === e ||
          t.contains(n.target) ||
          (document.body.classList.remove("off-nav-is-active"),
          t.classList.remove("is-active"),
          (t.style.maxHeight = null),
          e.setAttribute("aria-expanded", "false"));
      }));
  })(),
  (function () {
    "use strict";
    const e = document.getElementsByClassName("modal"),
      t = document.getElementsByClassName("modal-trigger");
    function n() {
      document.body.classList.remove("modal-is-active");
      for (let t = 0; t < e.length; t++) e[t].classList.remove("is-active");
    }
    if (e.length > 0 && t.length > 0)
      for (let e = 0; e < t.length; e++) {
        const n = t[e],
          i = document.getElementById(n.getAttribute("aria-controls"));
        i &&
          (n.hasAttribute("data-video") &&
            (null !== i.querySelector("iframe")
              ? i
                  .querySelector("iframe")
                  .setAttribute("src", n.getAttribute("data-video"))
              : null !== i.querySelector("video") &&
                i
                  .querySelector("video")
                  .setAttribute("src", n.getAttribute("data-video"))),
          n.addEventListener("click", function (e) {
            var t;
            e.preventDefault(),
              n.hasAttribute("aria-controls") &&
                (t = i) &&
                (document.body.classList.add("modal-is-active"),
                t.classList.add("is-active"));
          }));
      }
    document.addEventListener("click", function (e) {
      (e.target.classList.contains("modal") ||
        e.target.classList.contains("modal-close-trigger")) &&
        (e.preventDefault(), n());
    }),
      document.addEventListener("keydown", function (e) {
        27 === (e || window.event).keyCode && n();
      });
  })(),
  (function () {
    "use strict";
    const e = document.querySelectorAll(".pricing-slider");
    if (e.length > 0)
      for (let n = 0; n < e.length; n++) {
        const i = e[n],
          r = { el: i.querySelector("input") };
        (r.data = JSON.parse(r.el.getAttribute("data-price-input"))),
          (r.currentValEl = i.querySelector(".pricing-slider-value")),
          (r.thumbSize = parseInt(
            window
              .getComputedStyle(r.currentValEl)
              .getPropertyValue("--thumb-size"),
            10
          ));
        const a = i.parentNode.querySelectorAll(".pricing-item-price"),
          s = [];
        for (let e = 0; e < a.length; e++) {
          const t = a[e],
            n = {};
          (n.currency = t.parentNode.querySelector(
            ".pricing-item-price-currency"
          )),
            (n.amount = t.parentNode.querySelector(
              ".pricing-item-price-amount"
            )),
            (n.after = t.parentNode.querySelector(".pricing-item-price-after")),
            (n.data = JSON.parse(t.getAttribute("data-price-output"))),
            s.push(n);
        }
        r.el.setAttribute("min", 0),
          r.el.setAttribute("max", Object.keys(r.data).length - 1),
          !r.el.getAttribute("value") && r.el.setAttribute("value", 0),
          t(r, s),
          window.addEventListener("input", function () {
            t(r, s);
          });
      }
    function t(e, t) {
      e.currentValEl && (e.currentValEl.innerHTML = e.data[e.el.value]);
      for (let n = 0; n < t.length; n++) {
        const i = t[n];
        i.currency && (i.currency.innerHTML = i.data[e.el.value][0]),
          i.amount && (i.amount.innerHTML = i.data[e.el.value][1]),
          i.after && (i.after.innerHTML = i.data[e.el.value][2]);
      }
      !(function (e) {
        const t = e.el.value / e.el.max,
          n = e.thumbSize * t,
          i = (e.thumbSize - e.currentValEl.clientWidth) / 2;
        e.currentValEl.style.left = e.el.clientWidth * t - n + i + "px";
      })(e);
    }
  })(),
  (function () {
    "use strict";
    const e = document.querySelectorAll(".pricing-switcher");
    if (e.length > 0)
      for (let n = 0; n < e.length; n++) {
        const i = e[n],
          r = i.querySelector("input"),
          a = i.parentNode.querySelectorAll(".pricing-item-price"),
          s = [];
        for (let e = 0; e < a.length; e++) {
          const t = a[e],
            n = {};
          (n.currency = t.parentNode.querySelector(
            ".pricing-item-price-currency"
          )),
            (n.amount = t.parentNode.querySelector(
              ".pricing-item-price-amount"
            )),
            (n.after = t.parentNode.querySelector(".pricing-item-price-after")),
            (n.data = JSON.parse(t.getAttribute("data-price-output"))),
            s.push(n);
        }
        t(r, s),
          window.addEventListener("change", function () {
            t(r, s);
          });
      }
    function t(e, t) {
      for (let n = 0; n < t.length; n++) {
        const i = t[n],
          r = e.checked ? 1 : 0;
        i.currency && (i.currency.innerHTML = i.data[r][0]),
          i.amount && (i.amount.innerHTML = i.data[r][1]),
          i.after && (i.after.innerHTML = i.data[r][2]);
      }
    }
  })(),
  (function () {
    "use strict";
    const e = document.querySelectorAll("[class*=reveal-]");
    let t = window.innerHeight;
    function n(e, t) {
      let n = 0;
      return function () {
        const i = new Date().getTime();
        if (!(i - n < e)) return (n = i), t.apply(arguments);
      };
    }
    function i() {
      for (let i = 0; i < e.length; i++) {
        const r = e[i],
          a = r.getAttribute("data-reveal-delay"),
          s = r.getAttribute("data-reveal-offset")
            ? r.getAttribute("data-reveal-offset")
            : "200",
          c = r.getAttribute("data-reveal-container")
            ? r.closest(r.getAttribute("data-reveal-container"))
            : r;
        (n = s),
          c.getBoundingClientRect().top <= t - n &&
            !r.classList.contains("is-revealed") &&
            (a && 0 !== a
              ? setTimeout(function () {
                  r.classList.add("is-revealed");
                }, a)
              : r.classList.add("is-revealed"));
      }
      var n;
      !(function () {
        if (
          e.length >
          document.querySelectorAll("[class*=reveal-].is-revealed").length
        )
          return;
        window.removeEventListener("load", i),
          window.removeEventListener("scroll", r),
          window.removeEventListener("resize", a);
      })();
    }
    function r() {
      n(30, i());
    }
    function a() {
      (t = window.innerHeight), n(30, i());
    }
    e.length > 0 &&
      document.body.classList.contains("has-animations") &&
      (window.addEventListener("load", i),
      window.addEventListener("scroll", r),
      window.addEventListener("resize", a));
  })(),
  (function () {
    "use strict";
    const e = document.getElementsByClassName("smooth-scroll"),
      t = (e, n, i, r, a) => {
        const s = n - e;
        let c = s / i;
        const o = (function (e) {
          return e < 0.5 ? 2 * e * e : (4 - 2 * e) * e - 1;
        })((c = Math.min(c, 1)));
        window.scroll(0, a + r * o),
          s < i &&
            window.requestAnimationFrame((n) => {
              const s = n || new Date().getTime();
              t(e, s, i, r, a);
            });
      };
    if (e.length > 0)
      for (let n = 0; n < e.length; n++) {
        e[n].addEventListener("click", function (e) {
          e.preventDefault();
          const n = e.target.closest(".smooth-scroll"),
            i = n.href.split("#")[1],
            r = document.getElementById(i),
            a = n.getAttribute("data-duration") || 1e3;
          r &&
            window.requestAnimationFrame((e) => {
              const n = e || new Date().getTime(),
                i = n,
                s = window.pageYOffset,
                c = r.getBoundingClientRect().top;
              t(i, n, a, c, s);
            });
        });
      }
  })(),
  (function () {
    "use strict";
    const e = document.getElementsByClassName("tab");
    function t(e) {
      const t = e.getAttribute("aria-controls");
      document.getElementById(t).classList.add("is-active"),
        e.classList.add("is-active");
    }
    if (e.length > 0)
      for (let n = 0; n < e.length; n++) {
        const i = e[n];
        i.addEventListener("click", function (n) {
          n.preventDefault();
          const i = this.closest(".tabs").getElementsByClassName("tab-panel");
          if (!this.classList.contains("is-active")) {
            for (let t = 0; t < e.length; t++)
              e[t].classList.remove("is-active");
            for (let e = 0; e < i.length; e++)
              i[e].classList.remove("is-active");
            t(this);
          }
        }),
          i.classList.contains("is-active") && t(i);
      }
  })();
